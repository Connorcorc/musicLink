describe('empty spec', () => {
  beforeEach(() => {
    cy.intercept('GET', 'https://api.jamendo.com/v3.0/tracks/?client_id=3c243fb0&format=jsonpretty&limit=10&fuzzytags=jazz&include=musicinfo&groupby=artist_id', {fixture: 'sampleData.json'})
    cy.visit('http://localhost:3000')
    .get('#genres').select('jazz')
    .get('.genre-select-button')
    .click()
  })
  
  it('should have a list of 10 random songs', () => {
    cy.get('.track-container').should('have.length', 10)
  })

  it('should have names for each song', () => {
    cy.get('.randomSong > :nth-child(1)')
    .contains('Lullaby For Phil')
    .get('.randomSong > :nth-child(2)')
    .contains('To The Warmth')
    .get('.randomSong > :nth-child(3)')
    .contains('Evidence Song')
    .get('.randomSong > :nth-child(4)')
    .contains('Colonially French Kiss')
    .get('.randomSong > :nth-child(5)')
    .contains('Coal Train')
    .get('.randomSong > :nth-child(6)')
    .contains('sweet tania')
    .get('.randomSong > :nth-child(7)')
    .contains('univers')
    .get('.randomSong > :nth-child(8)')
    .contains('La note en cage')
    .get('.randomSong > :nth-child(9)')
    .contains('JazzProg')
    .get('.randomSong > :nth-child(10)')
    .contains('An Obsessive Love')
  })

  it('should have artists for each song', () => {
    cy.get(':nth-child(1) > h3')
    .contains('Alexey Baranov')
    .get(':nth-child(2) > h3')
    .contains('Frank Rawel')
    .get(':nth-child(3) > h3')
    .contains('The Good Lawdz')
    .get(':nth-child(4) > h3')
    .contains('Serakina')
    .get(':nth-child(5) > h3')
    .contains('Triplexity')
    .get(':nth-child(6) > h3')
    .contains('Arnaud Martin Jazabana')
    .get(':nth-child(7) > h3')
    .contains('suono matrice')
    .get(':nth-child(8) > h3')
    .contains('AdHoc')
    .get(':nth-child(9) > h3')
    .contains('Manuzik')
    .get(':nth-child(10) > h3')
    .contains('Angus &amp; Friends')
  })

  it('should have a duration for each song', () => {
    cy.get('.randomSong > :nth-child(1)')
    .contains('198 sec')
    .get('.randomSong > :nth-child(2)')
    .contains('167 sec')
    .get('.randomSong > :nth-child(3)')
    .contains('383 sec')
    .get('.randomSong > :nth-child(4)')
    .contains('288 sec')
    .get('.randomSong > :nth-child(5)')
    .contains('360 sec')
    .get('.randomSong > :nth-child(6)')
    .contains('306 sec')
    .get('.randomSong > :nth-child(7)')
    .contains('235 sec')
    .get('.randomSong > :nth-child(8)')
    .contains('326 sec')
    .get('.randomSong > :nth-child(9)')
    .contains('385 sec')
    .get('.randomSong > :nth-child(10)')
    .contains('277 sec')
  })

  it('should have a button to add each song to queue', () => {
    cy.get(':nth-child(1) > button')
    .should('exist')
    .get(':nth-child(2) > button')
    .should('exist')
    .get(':nth-child(3) > button')
    .should('exist')
    .get(':nth-child(4) > button')
    .should('exist')
    .get(':nth-child(5) > button')
    .should('exist')
    .get(':nth-child(6) > button')
    .should('exist')
    .get(':nth-child(7) > button')
    .should('exist')
    .get(':nth-child(8) > button')
    .should('exist')
    .get(':nth-child(9) > button')
    .should('exist')
    .get(':nth-child(10) > button')
    .should('exist')
  })

  it('should add a song to the queue when clicking add to queue button', () => {
    cy.get(':nth-child(3) > button')
    .click()
    .get('.player > .track-container')
    .should('exist')
    .get(':nth-child(4) > button')
    .click()
    .get('.player > :nth-child(2)')
    .should('exist')
    .get(':nth-child(5) > button')
    .click()
    .get('.player > :nth-child(3)')
    .should('exist')
    .get(':nth-child(6) > button')
    .click()
    .get('.player > :nth-child(4)')
    .should('exist')
  })

})